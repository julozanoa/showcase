<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Computación Visual on Computacion Visual</title><link>https://julozanoa.github.io/showcase/</link><description>Recent content in Computación Visual on Computacion Visual</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://julozanoa.github.io/showcase/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://julozanoa.github.io/showcase/docs/ejercicios/visual_illusions/coloring/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://julozanoa.github.io/showcase/docs/ejercicios/visual_illusions/coloring/</guid><description>Coloring # Color Blindness # Introducción # El daltonismo es un trastorno visual que afecta a la capacidad de distinguir ciertos colores. Las personas con daltonismo pueden tener dificultades para diferenciar colores como el rojo y el verde, o el azul y el amarillo. Esta condición puede ser hereditaria o adquirida debido a ciertas enfermedades o lesiones oculares.
El daltonismo puede afectar la vida cotidiana de una persona, especialmente en actividades que requieren una percepción precisa del color, como la lectura de mapas, el trabajo en diseño gráfico o la identificación de señales de tráfico.</description></item><item><title/><link>https://julozanoa.github.io/showcase/docs/ejercicios/visual_illusions/machBands/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://julozanoa.github.io/showcase/docs/ejercicios/visual_illusions/machBands/</guid><description>Mach Bands # Terrain with Perlin noise # Introducción # El ruido Perlin es una técnica utilizada en la generación de gráficos en 3D para crear terrenos y objetos con aspecto natural. En este proyecto se utiliza la técnica del ruido Perlin para generar un terreno tridimensional que puede ser visualizado en tiempo real. La visualización utiliza diferentes colores para representar diferentes alturas en el terreno, lo que permite una visualización clara y detallada del terreno generado.</description></item><item><title/><link>https://julozanoa.github.io/showcase/docs/ejercicios/visual_illusions/masking/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://julozanoa.github.io/showcase/docs/ejercicios/visual_illusions/masking/</guid><description>Visual Masking # Kinegramas y Patrones de Moiré # Introducción # Kinegrama # Un Kinegrama es un patrón visual utilizado en la impresión de seguridad para proteger documentos importantes como billetes, pasaportes y tarjetas de identificación. Es una técnica de animación óptica que utiliza imágenes en movimiento para crear un efecto de holograma, lo que dificulta la falsificación de documentos. Los Kinegrams son creados mediante una combinación de técnicas de grabado y holografía, y se han convertido en una herramienta crucial para garantizar la seguridad de documentos importantes en todo el mundo.</description></item><item><title/><link>https://julozanoa.github.io/showcase/docs/ejercicios/visual_illusions/spatialCoherence/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://julozanoa.github.io/showcase/docs/ejercicios/visual_illusions/spatialCoherence/</guid><description>Spacial Coherence # Pixelator # Introducción # La pixelación es una técnica utilizada en la industria de los videojuegos y el cine para simular la baja resolución y crear un efecto retro. En este caso, se utiliza en una aplicación web en vivo que toma una imagen en tiempo real de la cámara del usuario y la pixela usando dos estrategias diferentes: la media de color y la coherencia espacial.</description></item><item><title/><link>https://julozanoa.github.io/showcase/docs/ejercicios/visual_illusions/temporalCoherence/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://julozanoa.github.io/showcase/docs/ejercicios/visual_illusions/temporalCoherence/</guid><description> Temporal Coherence #</description></item><item><title/><link>https://julozanoa.github.io/showcase/docs/ejercicios/visual_illusions/depthPerception/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://julozanoa.github.io/showcase/docs/ejercicios/visual_illusions/depthPerception/</guid><description>Depth Perception # 2D a 3D # Introducción # La percepción de la profundidad es una habilidad importante del sistema visual humano que nos permite percibir la distancia entre objetos en el mundo en tres dimensiones. Existen varias pistas o claves que nuestro cerebro utiliza para reconstruir la percepción de la profundidad, incluyendo las claves monoculares y binoculares.
Antecedentes y Trabajos Previos: # Históricamente, la perspectiva lineal fue desarrollada en el Renacimiento y utilizada en pinturas de la época.</description></item><item><title>Creating a New Theme</title><link>https://julozanoa.github.io/showcase/posts/creating-a-new-theme/</link><pubDate>Sun, 28 Sep 2014 00:00:00 +0000</pubDate><guid>https://julozanoa.github.io/showcase/posts/creating-a-new-theme/</guid><description>Introduction # This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&amp;rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&amp;rsquo;t cover using CSS to style your theme.
We&amp;rsquo;ll start with creating a new site with a very basic template.</description></item><item><title>Migrate to Hugo from Jekyll</title><link>https://julozanoa.github.io/showcase/posts/migrate-from-jekyll/</link><pubDate>Mon, 10 Mar 2014 00:00:00 +0000</pubDate><guid>https://julozanoa.github.io/showcase/posts/migrate-from-jekyll/</guid><description>Move static content to static # Jekyll has a rule that any directory not starting with _ will be copied as-is to the _site output. Hugo keeps all static content under static. You should therefore move it all there. With Jekyll, something that looked like
▾ &amp;lt;root&amp;gt;/ ▾ images/ logo.png should become
▾ &amp;lt;root&amp;gt;/ ▾ static/ ▾ images/ logo.png Additionally, you&amp;rsquo;ll want any files that should reside at the root (such as CNAME) to be moved to static.</description></item><item><title>(Hu)go Template Primer</title><link>https://julozanoa.github.io/showcase/posts/goisforlovers/</link><pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate><guid>https://julozanoa.github.io/showcase/posts/goisforlovers/</guid><description>Hugo uses the excellent Go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in Go templates.
This document is a brief primer on using Go templates.</description></item><item><title>Getting Started with Hugo</title><link>https://julozanoa.github.io/showcase/posts/hugoisforlovers/</link><pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate><guid>https://julozanoa.github.io/showcase/posts/hugoisforlovers/</guid><description>Step 1. Install Hugo # Go to Hugo releases and download the appropriate version for your OS and architecture.
Save it somewhere specific as we will be using it in the next step.
More complete instructions are available at Install Hugo
Step 2. Build the Docs # Hugo has its own example site which happens to also be the documentation site you are reading right now.
Follow the following steps:</description></item></channel></rss>